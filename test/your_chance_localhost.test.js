const { expect } = require("chai")

describe("YOUR_CHANCE contract", function () {
    it("should overflow when sending too much ether", async function () {
        // Deploy the contract and get the instance
        const Contract = await ethers.getContractFactory("YOUR_CHANCE")
        const contract = await Contract.deploy()
        await contract.deployed()

        // Create a local account
        const [account] = await ethers.provider.listAccounts()

        // Calculate the maximum amount of ether to send
        const maxEther = ethers.constants.MaxUint256.sub(contract.balance)

        // Send too much ether and expect an overflow error
        await expect(
            contract.set_game("question", "answer", { value: maxEther.add(1) })
        ).to.be.revertedWith("value cannot exceed MAX_INTEGER")

        // Verify that the contract balance has not changed
        expect(await ethers.provider.getBalance(contract.address)).to.equal(0)
    })
})

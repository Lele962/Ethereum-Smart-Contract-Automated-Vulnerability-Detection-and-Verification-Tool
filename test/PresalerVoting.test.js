const { expect } = require("chai");

describe("PresalerVoting", function() {
  let contractInstance;

  beforeEach(async function() {
    const PresalerVoting = await ethers.getContractFactory("PresalerVoting");
    contractInstance = await PresalerVoting.deploy();
    await contractInstance.deployed();
  });


  it("should not allow integer overflow in startBlockNr", async function() {
    // Test that the contract does not allow integer overflow in startBlockNr
    const initialValue = await contractInstance.startBlockNr();
    await contractInstance.addToStartBlockNr(2**256 - 1);
    const finalValue = await contractInstance.startBlockNr();
    expect(finalValue).to.equal(initialValue);
  });

  it("should not allow integer overflow in durationHrs", async function() {
    // Test that the contract does not allow integer overflow in durationHrs
    const initialValue = await contractInstance.durationHrs();
    await contractInstance.addToDurationHrs(2**256 - 1);
    const finalValue = await contractInstance.durationHrs();
    expect(finalValue).to.equal(initialValue);
  });
});
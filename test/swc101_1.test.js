const { expect } = require("chai");

describe("swc101_1", function() {
  let contractInstance;

  beforeEach(async function() {
    const swc101_1 = await ethers.getContractFactory("swc101_1");
    contractInstance = await swc101_1.deploy();
    await contractInstance.deployed();
  });


  it("should not allow integer overflow in value", async function() {
    // Test that the contract does not allow integer overflow in value
    const initialValue = await contractInstance.value();
    await contractInstance.addToValue(2**256 - 1);
    const finalValue = await contractInstance.value();
    expect(finalValue).to.equal(initialValue);
  });

  it("should not allow integer overflow in value", async function() {
    // Test that the contract does not allow integer overflow in value
    const initialValue = await contractInstance.value();
    await contractInstance.addToValue(2**256 - 1);
    const finalValue = await contractInstance.value();
    expect(finalValue).to.equal(initialValue);
  });
});
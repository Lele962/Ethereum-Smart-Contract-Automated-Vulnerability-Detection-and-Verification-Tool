const { expect } = require("chai");

describe("SeriesFactory", function() {
  let contractInstance;

  beforeEach(async function() {
    const SeriesFactory = await ethers.getContractFactory("SeriesFactory");
    contractInstance = await SeriesFactory.deploy();
    await contractInstance.deployed();
  });


  it("should not allow integer overflow in seriesId", async function() {
    // Test that the contract does not allow integer overflow in seriesId
    const initialValue = await contractInstance.seriesId();
    await contractInstance.addToSeriesId(2**256 - 1);
    const finalValue = await contractInstance.seriesId();
    expect(finalValue).to.equal(initialValue);
  });

  it("should not allow integer overflow in shares", async function() {
    // Test that the contract does not allow integer overflow in shares
    const initialValue = await contractInstance.shares();
    await contractInstance.addToShares(2**256 - 1);
    const finalValue = await contractInstance.shares();
    expect(finalValue).to.equal(initialValue);
  });
});